package tn.esprit.clubsync.entities;


import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;
import java.util.Date;
import java.util.Set;
import java.util.stream.Collectors;

@Entity
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@EqualsAndHashCode
@Table(name = "projetTache")

public class ProjetTache {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name="id")
    private Long id;

    @Column(name="titre")
    private String titre;

    @Column(name="description", columnDefinition = "TEXT")
    private String description;

    @Column(name="status")
    private String status; // Maps to 'todo', 'inProgress', or 'done'

    @Column(name="priorite")
    private String priorite; // Maps to 'high', 'medium', or 'low'

    @Column(name="due_date")
    private Date dueDate;

    @Column(name="progress")
    private Integer progress; // Optional progress percentage

    @Column(name="label")
    private String label; // Custom label

    @Column(name="completed_date")
    private Date completedDate; // Optional completion date

    @ManyToOne
    @JoinColumn(name = "assignee_id")
    @JsonIgnore// Reference to the assigned user
    private User assignee;

    @JsonProperty("AssigneeId")
    public Long getAssigneeId() {
        return assignee != null ? assignee.getIdUser() : null;
    }
    @JsonProperty("AssigneeId")
    public void setAssigneeId(Long AssigneeId) {
        this.assignee = new User();
        this.assignee.setIdUser(AssigneeId);
    }


    @ManyToOne
    @JoinColumn(name = "projet_id")
    @JsonIgnore// Reference to the assigned user
    private Projet projet;

    @JsonProperty("ProjetId")
    public Long getProjetId() {
        return projet != null ? projet.getId() : null;
    }



    @JsonProperty("ProjetId")
    public void setcProjetId(Long ProjetId) {
        this.projet = new Projet();
        this.projet.setId(ProjetId);
    }


    @OneToMany(mappedBy = "tache", cascade = CascadeType.ALL)
    @JsonIgnore// Reference to the assigned user
    private Set<Report> reports;

    /**
     @JsonProperty("ReportIds")
     public Set<Long> getReportIds() {
     if (reports == null) {
     return null;
     }
     return reports.stream()
     .map(Report::getId)
     .collect(Collectors.toSet());
     }
     */
    @Column(name="date_created", updatable = false)
    @CreationTimestamp
    private Date dateCreated;

    @Column(name="last_updated")
    @UpdateTimestamp
    private Date lastUpdated;

    // Constructors, getters, and setters can be generated by Lombok


    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getTitre() {
        return titre;
    }

    public void setTitre(String titre) {
        this.titre = titre;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public String getPriorite() {
        return priorite;
    }

    public void setPriorite(String priorite) {
        this.priorite = priorite;
    }

    public Date getDueDate() {
        return dueDate;
    }

    public void setDueDate(Date dueDate) {
        this.dueDate = dueDate;
    }

    public Integer getProgress() {
        return progress;
    }

    public void setProgress(Integer progress) {
        this.progress = progress;
    }

    public String getLabel() {
        return label;
    }

    public void setLabel(String label) {
        this.label = label;
    }

    public Date getCompletedDate() {
        return completedDate;
    }

    public void setCompletedDate(Date completedDate) {
        this.completedDate = completedDate;
    }

    public User getAssignee() {
        return assignee;
    }

    public void setAssignee(User assignee) {
        this.assignee = assignee;
    }

    public Projet getProjet() {
        return projet;
    }

    public void setProjet(Projet projet) {
        this.projet = projet;
    }

    public Set<Report> getReports() {
        return reports;
    }

    public void setReports(Set<Report> reports) {
        this.reports = reports;
    }

    public Date getDateCreated() {
        return dateCreated;
    }

    public void setDateCreated(Date dateCreated) {
        this.dateCreated = dateCreated;
    }

    public Date getLastUpdated() {
        return lastUpdated;
    }

    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    @Override
    public String toString() {
        return "Projet{id=" + id + ", titre='" + titre + "', description='" + description +

                "'}";
    }

}

